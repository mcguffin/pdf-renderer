!function(l,p,o){var s,d={view:{}},r=p.l10n;s=wp.media.View.extend({template:wp.template("pdf-page-item"),className:"pdf-page-item",initialize:function(){return wp.media.View.prototype.initialize.apply(this,arguments)},render:function(){return wp.media.View.prototype.render.apply(this,arguments)}}),d.view.PDFFrame=wp.media.view.MediaFrame.extend({template:wp.template("pdf-modal"),regions:["title","content","instructions","buttons","pagenav"],events:{"click [data-page]":"clickPage"},initialize:function(){return _.defaults(this.options,{uploader:!1,title:r.pdfUpload}),wp.media.view.MediaFrame.prototype.initialize.apply(this,arguments),this._pdf=this._canvas=null,this._current_page=0,this._pages=new Backbone.Collection,this.createTitle(),this.createButtons(),this},createTitle:function(){this._title=new wp.media.View({tagName:"h1"}),this._title.$el.text(this.options.title),this.title.set([this._title])},createButtons:function(){var e=this;this.buttons.set([new wp.media.view.Button({text:r.CancelUpload,className:"cancel-upload",click:function(){e.trigger("cancel-upload"),e.close()}}),new wp.media.view.Button({text:r.UploadPDF,className:"upload-pdf",click:function(){}}),new wp.media.view.Button({text:r.UploadImages,className:"button-primary",click:function(){e.trigger("cancel-upload"),e.uploadImages(),e.close()}})])},setFile:function(e){var t=this,a=new FileReader;return this.file=e,a.onload=function(e){t.parsePDF(e.target.result)},a.readAsArrayBuffer(e.blob),this},clickPage:function(e){this.showPage(l(e.target).attr("data-page"))},renderPageNav:function(e){console.log();var t,a=this,i=1,n=[];for(this._pages=new Backbone.Collection;i<=e;i++)t=new Backbone.Model({id:i,selected:!0}),this._pages.add(t),console.log(this._pages.get(i)),n.push(new s({pagenum:i,selected:!0,model:t,events:{'change [type="radio"]':function(){this.$('[type="radio"]').prop("checked")&&a.showPage(this.options.pagenum)},'change [type="checkbox"]':function(){this.model.set("selected",this.$('[type="checkbox"]').prop("checked"))}}}));this.pagenav.set(n)},parsePDF:function(e){var t=this;pdfjsLib.getDocument(e).then(function(e){t._pdf=e,t.renderPageNav(e.numPages),t.showPage(1)})},showPage:function(e){var t=this,a=this._pages.get(e);a.get("canvas")?this.content.set([new wp.media.View({el:a.get("canvas")})]):(this.content.set([new Backbone.View]),this.renderPage(e,function(){t.showPage(e)}))},renderPage:function(e,n,o){var s=this._pages.get(e);this._pdf.getPage(e).then(function(e){var t=e.getViewport(1),a=l("<canvas></canvas>").get(0),i=a.getContext("2d");t=e.getViewport(p.options.image_width/t.width),a.width=t.width,a.height=t.height,e.render({canvasContext:i,viewport:t}).then(function(){s.set("page",e),s.set("canvas",a),n&&n.apply(s,o||[])})})},uploadImages:function(){var i=this,a="image/png",n=function(e){var t=new o.Image;t.onload=function(){t.name=e,t.type=a,i.options.uploader.addFile(t.getAsBlob(),e)},t.load(this.get("canvas").toDataURL(a)),l("body").append(t)};this._pages.each(function(e,t){if(e.get("selected")){var a=i.file.file.name.replace(/\.[a-z0-9]+$/,"")+"-p"+t+".png";e.get("canvas")?n.apply(e,[a]):i.renderPage(1*t,n,[a])}})}}),_.extend(wp.media.view.UploaderWindow.prototype,{_parentReady:wp.media.view.UploaderWindow.prototype.ready,didReady:!1,ready:function(){var s,p=[];if(this.didReady)return this._parentReady.apply(this,arguments);return this.didReady=!0,ret=this._parentReady.apply(this,arguments),this.uploader.uploader.bind("FilesAdded",function(e,t){for(var a,i,n,o=0;o<t.length;o++)"application/pdf"==t[o].type&&(i=t[o],n=void 0,(n={file:i,blob:i.getNative()}).blob||(n.blob=i.getSource()),(a=n).blob instanceof Blob&&p.push(a));p.length&&(e.stop(),e.refresh(),function e(t){var a;s&&s.close().dispose(),p.length?(a=p.shift(),(s=new d.view.PDFFrame({controller:l(this),uploader:t,title:r.Upload+": "+a.file.name.replace(/\.[a-z0-9]+$/,"")})).on("proceed",function(){e(t)}).on("cancel-upload",function(){a.file.attachment.destroy()}),s.setFile(a),s.open()):t.start()}(e))}),this.uploader.uploader.bind("BeforeUpload",function(e,t){}),ret}})}(jQuery,pdf_renderer,mOxie);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lZGlhLmpzIl0sIm5hbWVzIjpbIiQiLCJvcHRzIiwibyIsIlBhZ2VJdGVtIiwicGRmUmVuZGVyZXIiLCJ2aWV3IiwibDEwbiIsIndwIiwibWVkaWEiLCJWaWV3IiwiZXh0ZW5kIiwidGVtcGxhdGUiLCJjbGFzc05hbWUiLCJpbml0aWFsaXplIiwicHJvdG90eXBlIiwiYXBwbHkiLCJ0aGlzIiwiYXJndW1lbnRzIiwicmVuZGVyIiwiUERGRnJhbWUiLCJNZWRpYUZyYW1lIiwicmVnaW9ucyIsImV2ZW50cyIsImNsaWNrIFtkYXRhLXBhZ2VdIiwiXyIsImRlZmF1bHRzIiwib3B0aW9ucyIsInVwbG9hZGVyIiwidGl0bGUiLCJwZGZVcGxvYWQiLCJfcGRmIiwiX2NhbnZhcyIsIl9jdXJyZW50X3BhZ2UiLCJfcGFnZXMiLCJCYWNrYm9uZSIsIkNvbGxlY3Rpb24iLCJjcmVhdGVUaXRsZSIsImNyZWF0ZUJ1dHRvbnMiLCJfdGl0bGUiLCJ0YWdOYW1lIiwiJGVsIiwidGV4dCIsInNldCIsInNlbGYiLCJidXR0b25zIiwiQnV0dG9uIiwiQ2FuY2VsVXBsb2FkIiwiY2xpY2siLCJ0cmlnZ2VyIiwiY2xvc2UiLCJVcGxvYWRQREYiLCJVcGxvYWRJbWFnZXMiLCJ1cGxvYWRJbWFnZXMiLCJzZXRGaWxlIiwiZmlsZSIsImZpbGVSZWFkZXIiLCJGaWxlUmVhZGVyIiwib25sb2FkIiwiZXZlbnQiLCJwYXJzZVBERiIsInRhcmdldCIsInJlc3VsdCIsInJlYWRBc0FycmF5QnVmZmVyIiwiYmxvYiIsImNsaWNrUGFnZSIsImUiLCJzaG93UGFnZSIsImF0dHIiLCJyZW5kZXJQYWdlTmF2IiwibnVtUGFnZXMiLCJjb25zb2xlIiwibG9nIiwibSIsImkiLCJidG5zIiwiTW9kZWwiLCJpZCIsInNlbGVjdGVkIiwiYWRkIiwiZ2V0IiwicHVzaCIsInBhZ2VudW0iLCJtb2RlbCIsImNoYW5nZSBbdHlwZT1cInJhZGlvXCJdIiwicHJvcCIsImNoYW5nZSBbdHlwZT1cImNoZWNrYm94XCJdIiwicGFnZW5hdiIsImFyciIsInBkZmpzTGliIiwiZ2V0RG9jdW1lbnQiLCJ0aGVuIiwicGRmIiwiaWR4IiwiY29udGVudCIsImVsIiwicmVuZGVyUGFnZSIsImNiIiwiY2JfYXJncyIsImdldFBhZ2UiLCJwYWdlIiwidnAiLCJnZXRWaWV3cG9ydCIsImNhbnZhcyIsImN0eCIsImdldENvbnRleHQiLCJpbWFnZV93aWR0aCIsIndpZHRoIiwiaGVpZ2h0IiwiY2FudmFzQ29udGV4dCIsInZpZXdwb3J0IiwidHlwZSIsInVwbG9hZCIsIm5hbWUiLCJpbWciLCJJbWFnZSIsImFkZEZpbGUiLCJnZXRBc0Jsb2IiLCJsb2FkIiwidG9EYXRhVVJMIiwiYXBwZW5kIiwiZWFjaCIsInBnIiwicmVwbGFjZSIsIlVwbG9hZGVyV2luZG93IiwiX3BhcmVudFJlYWR5IiwicmVhZHkiLCJkaWRSZWFkeSIsInBkZk1vZGFsIiwicGRmcyIsInJldCIsImJpbmQiLCJ1cCIsImZpbGVzIiwiZmlsZURhdGEiLCJfcmV0IiwibGVuZ3RoIiwiZ2V0TmF0aXZlIiwiZ2V0U291cmNlIiwiQmxvYiIsInN0b3AiLCJyZWZyZXNoIiwicGRmUG9wdXAiLCJmaWxlSXRlbSIsImRpc3Bvc2UiLCJzaGlmdCIsImNvbnRyb2xsZXIiLCJVcGxvYWQiLCJvbiIsImF0dGFjaG1lbnQiLCJkZXN0cm95Iiwib3BlbiIsInN0YXJ0IiwialF1ZXJ5IiwicGRmX3JlbmRlcmVyIiwibU94aWUiXSwibWFwcGluZ3MiOiJDQUFBLFNBQVdBLEVBQUdDLEVBQU1DLEdBRW5CLElBS0NDLEVBTEdDLEVBQWMsQ0FDaEJDLEtBQU0sSUFFUEMsRUFBT0wsRUFBS0ssS0FLYkgsRUFBV0ksR0FBR0MsTUFBTUMsS0FBS0MsT0FBTyxDQUMvQkMsU0FBV0osR0FBR0ksU0FBUyxpQkFDdkJDLFVBQVUsZ0JBQ1ZDLFdBQVcsV0FDVixPQUFPTixHQUFHQyxNQUFNQyxLQUFLSyxVQUFVRCxXQUFXRSxNQUFNQyxLQUFLQyxZQUV0REMsT0FBTyxXQUNOLE9BQU9YLEdBQUdD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QkosRUFUS0MsR0FVU3ZFLGdCQUFnQjJFLE1BQzdCVixFQUFLaEQsS0FBTXFELElBSVRMLEVBQUtPLFNBQ1RKLEVBQUdRLE9BQ0hSLEVBQUdTLFVBMURMLFNBQVNDLEVBQVVsSCxHQUNsQixJQUFJbUgsRUFDQ2YsR0FDSkEsRUFBUzlFLFFBQVE4RixVQUVWZixFQUFLTyxRQUNaTyxFQUFXZCxFQUFLZ0IsU0FDaEJqQixFQUFXLElBQUkzSCxFQUFZQyxLQUFLYyxTQUFVLENBQ3pDOEgsV0FBWWpKLEVBQUVnQixNQUNkVyxTQUFTQSxFQUNUQyxNQUFPdEIsRUFBSzRJLE9BQVMsS0FBT0osRUFBU3hGLEtBQUswRCxLQUFLVSxRQUFRLGVBQWUsT0FFOUR5QixHQUFHLFVBQVUsV0FFckJOLEVBQVVsSCxLQUVSd0gsR0FBRyxnQkFBZ0IsV0FDckJMLEVBQVN4RixLQUFLOEYsV0FBV0MsWUFFMUJ0QixFQUFTMUUsUUFBU3lGLEdBQ2xCZixFQUFTdUIsUUFFVDNILEVBQVM0SCxRQXFDVFYsQ0FBVVYsTUFJWm5ILEtBQUtXLFNBQVNBLFNBQVN1RyxLQUFLLGVBQWUsU0FBVUMsRUFBSTdFLE1BSWxEMkUsT0E1VFYsQ0FnVUl1QixPQUFRQyxhQUFjQyIsImZpbGUiOiJhZG1pbi9tZWRpYS5kZXYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oICQsIG9wdHMsIG8gKSB7XG5cblx0dmFyIHBkZlJlbmRlcmVyID0ge1xuXHRcdFx0dmlldzoge31cblx0XHR9LFxuXHRcdGwxMG4gPSBvcHRzLmwxMG4sXG5cdFx0aW1hZ2VJbmZvcyA9IHt9LFxuXHRcdFBhZ2VJdGVtO1xuXG5cblx0UGFnZUl0ZW0gPSB3cC5tZWRpYS5WaWV3LmV4dGVuZCh7XG5cdFx0dGVtcGxhdGU6ICB3cC50ZW1wbGF0ZSgncGRmLXBhZ2UtaXRlbScpLFxuXHRcdGNsYXNzTmFtZToncGRmLXBhZ2UtaXRlbScsXG5cdFx0aW5pdGlhbGl6ZTpmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiB3cC5tZWRpYS5WaWV3LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblx0XHR9LFxuXHRcdHJlbmRlcjpmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiB3cC5tZWRpYS5WaWV3LnByb3RvdHlwZS5yZW5kZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXHRcdH1cblx0fSk7XG5cblx0cGRmUmVuZGVyZXIudmlldy5QREZGcmFtZSA9IHdwLm1lZGlhLnZpZXcuTWVkaWFGcmFtZS5leHRlbmQoe1xuXHRcdHRlbXBsYXRlOiAgd3AudGVtcGxhdGUoJ3BkZi1tb2RhbCcpLFxuXHRcdHJlZ2lvbnM6ICAgWyAndGl0bGUnLCdjb250ZW50JywnaW5zdHJ1Y3Rpb25zJywnYnV0dG9ucycsICdwYWdlbmF2JyBdLFxuXHRcdGV2ZW50czp7XG5cdFx0XHQnY2xpY2sgW2RhdGEtcGFnZV0nIDogJ2NsaWNrUGFnZSdcblx0XHR9LFxuXHRcdGluaXRpYWxpemU6IGZ1bmN0aW9uKCApIHtcblxuXG5cdFx0XHRfLmRlZmF1bHRzKCB0aGlzLm9wdGlvbnMsIHtcblx0XHRcdFx0dXBsb2FkZXI6XHRmYWxzZSxcblx0XHRcdFx0dGl0bGU6XHRcdGwxMG4ucGRmVXBsb2FkLFxuXHRcdFx0fSk7XG5cblx0XHRcdHdwLm1lZGlhLnZpZXcuTWVkaWFGcmFtZS5wcm90b3R5cGUuaW5pdGlhbGl6ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7XG5cblx0XHRcdHRoaXMuX3BkZiA9IHRoaXMuX2NhbnZhcyA9IG51bGw7XG5cdFx0XHR0aGlzLl9jdXJyZW50X3BhZ2UgPSAwO1xuXG5cdFx0XHR0aGlzLl9wYWdlcyA9IG5ldyBCYWNrYm9uZS5Db2xsZWN0aW9uKClcblxuXHRcdFx0dGhpcy5jcmVhdGVUaXRsZSgpO1xuXHRcdFx0dGhpcy5jcmVhdGVCdXR0b25zKCk7XG5cblx0XHRcdHJldHVybiB0aGlzO1xuXG5cdFx0fSxcblx0XHRjcmVhdGVUaXRsZTogZnVuY3Rpb24oICkge1xuXHRcdFx0dGhpcy5fdGl0bGUgPSBuZXcgd3AubWVkaWEuVmlldyh7XG5cdFx0XHRcdHRhZ05hbWU6ICdoMSdcblx0XHRcdH0pO1xuXHRcdFx0dGhpcy5fdGl0bGUuJGVsLnRleHQoIHRoaXMub3B0aW9ucy50aXRsZSApO1xuXHRcdFx0dGhpcy50aXRsZS5zZXQoIFsgdGhpcy5fdGl0bGUgXSApO1xuXHRcdH0sXG5cdFx0Y3JlYXRlQnV0dG9uczogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0XHR0aGlzLmJ1dHRvbnMuc2V0KCBbXG5cdFx0XHRcdG5ldyB3cC5tZWRpYS52aWV3LkJ1dHRvbih7XG5cdFx0XHRcdFx0dGV4dDogbDEwbi5DYW5jZWxVcGxvYWQsXG5cdFx0XHRcdFx0Y2xhc3NOYW1lOiAnY2FuY2VsLXVwbG9hZCcsXG5cdFx0XHRcdFx0Y2xpY2s6ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRzZWxmLnRyaWdnZXIoJ2NhbmNlbC11cGxvYWQnKTtcblx0XHRcdFx0XHRcdHNlbGYuY2xvc2UoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pLFxuXHRcdFx0XHRuZXcgd3AubWVkaWEudmlldy5CdXR0b24oe1xuXHRcdFx0XHRcdHRleHQ6IGwxMG4uVXBsb2FkUERGLFxuXHRcdFx0XHRcdGNsYXNzTmFtZTogJ3VwbG9hZC1wZGYnLFxuXHRcdFx0XHRcdGNsaWNrOmZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0Ly8gZGlzbWlzcywgY29udGludWUgd2l0aCB3cCBkZWZ1YWx0IGJlaGF2aW91clxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSksXG5cdFx0XHRcdG5ldyB3cC5tZWRpYS52aWV3LkJ1dHRvbih7XG5cdFx0XHRcdFx0dGV4dDogbDEwbi5VcGxvYWRJbWFnZXMsXG5cdFx0XHRcdFx0Y2xhc3NOYW1lOiAnYnV0dG9uLXByaW1hcnknLFxuXHRcdFx0XHRcdGNsaWNrOmZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0c2VsZi50cmlnZ2VyKCdjYW5jZWwtdXBsb2FkJyk7XG5cdFx0XHRcdFx0XHRzZWxmLnVwbG9hZEltYWdlcygpO1xuXHRcdFx0XHRcdFx0c2VsZi5jbG9zZSgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSlcblx0XHRcdF0gKTtcblx0XHR9LFxuXHRcdHNldEZpbGU6ZnVuY3Rpb24oIGZpbGUgKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsXG5cdFx0XHRcdGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuXHRcdFx0dGhpcy5maWxlID0gZmlsZTtcblx0XHRcdGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24oZXZlbnQpIHtcbi8vXHRcdFx0ICAgIGFycmF5QnVmZmVyID0gZXZlbnQudGFyZ2V0LnJlc3VsdDtcblx0XHRcdFx0c2VsZi5wYXJzZVBERiggZXZlbnQudGFyZ2V0LnJlc3VsdCApO1xuXHRcdFx0fTtcblx0XHRcdGZpbGVSZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoIGZpbGUuYmxvYiApO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHRjbGlja1BhZ2U6ZnVuY3Rpb24oZSkge1xuXHRcdFx0dGhpcy5zaG93UGFnZSgkKGUudGFyZ2V0KS5hdHRyKCdkYXRhLXBhZ2UnKSk7XG5cdFx0fSxcblx0XHRyZW5kZXJQYWdlTmF2OmZ1bmN0aW9uKG51bVBhZ2VzKSB7XG5cdFx0XHRjb25zb2xlLmxvZygpXG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsXG5cdFx0XHRcdGkgPSAxLCBidG5zID0gW10sIG07XG5cblx0XHRcdHRoaXMuX3BhZ2VzID0gbmV3IEJhY2tib25lLkNvbGxlY3Rpb24oKVxuXG5cdFx0XHRmb3IgKGk7aTw9bnVtUGFnZXM7aSsrKSB7XG5cdFx0XHRcdG0gPSBuZXcgQmFja2JvbmUuTW9kZWwoe1xuXHRcdFx0XHRcdGlkOmksXG5cdFx0XHRcdFx0c2VsZWN0ZWQ6dHJ1ZSxcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHRoaXMuX3BhZ2VzLmFkZCggbSApO1xuXHRcdFx0XHRjb25zb2xlLmxvZyh0aGlzLl9wYWdlcy5nZXQoaSkpXG5cdFx0XHRcdGJ0bnMucHVzaChcblx0XHRcdFx0XHRuZXcgUGFnZUl0ZW0oe1xuXHRcdFx0XHRcdFx0cGFnZW51bTppLFxuXHRcdFx0XHRcdFx0c2VsZWN0ZWQ6dHJ1ZSxcblx0XHRcdFx0XHRcdG1vZGVsOm0sXG5cdFx0XHRcdFx0XHRldmVudHM6e1xuXHRcdFx0XHRcdFx0XHQnY2hhbmdlIFt0eXBlPVwicmFkaW9cIl0nIDogZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHRoaXMuJCgnW3R5cGU9XCJyYWRpb1wiXScpLnByb3AoJ2NoZWNrZWQnKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHNlbGYuc2hvd1BhZ2UoIHRoaXMub3B0aW9ucy5wYWdlbnVtICk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHQnY2hhbmdlIFt0eXBlPVwiY2hlY2tib3hcIl0nIDogZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLm1vZGVsLnNldCggJ3NlbGVjdGVkJywgdGhpcy4kKCdbdHlwZT1cImNoZWNrYm94XCJdJykucHJvcCgnY2hlY2tlZCcpICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KVxuXHRcdFx0XHQpO1xuXG5cdFx0XHR9XG5cdFx0XHR0aGlzLnBhZ2VuYXYuc2V0KCBidG5zICk7XG5cdFx0fSxcblx0XHRwYXJzZVBERjpmdW5jdGlvbiggYXJyICkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0cGRmanNMaWIuZ2V0RG9jdW1lbnQoYXJyKS50aGVuKGZ1bmN0aW9uKHBkZikge1xuXHRcdFx0XHQvLyBidWlsZCBwYWdlcyBzZWxlY3RvclxuXHRcdFx0XHRzZWxmLl9wZGYgPSBwZGY7XG5cdFx0XHRcdHNlbGYucmVuZGVyUGFnZU5hdihwZGYubnVtUGFnZXMpXG5cblx0XHRcdFx0c2VsZi5zaG93UGFnZSgxKTtcblx0XHRcdH0pO1xuXHRcdH0sXG5cdFx0c2hvd1BhZ2U6ZnVuY3Rpb24oaWR4KSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsXG5cdFx0XHRcdG0gPSB0aGlzLl9wYWdlcy5nZXQoaWR4KTtcblxuXHRcdFx0aWYgKCAhISBtLmdldCgnY2FudmFzJykgKSB7XG5cdFx0XHRcdHRoaXMuY29udGVudC5zZXQoIFtcblx0XHRcdFx0XHRuZXcgd3AubWVkaWEuVmlldyh7XG5cdFx0XHRcdFx0XHRlbDogbS5nZXQoJ2NhbnZhcycpLFxuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdF0gKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMuY29udGVudC5zZXQoW25ldyBCYWNrYm9uZS5WaWV3KCldKVxuXHRcdFx0XHR0aGlzLnJlbmRlclBhZ2UoIGlkeCwgZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRzZWxmLnNob3dQYWdlKGlkeCk7XG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblxuXHRcdH0sXG5cdFx0cmVuZGVyUGFnZTpmdW5jdGlvbihpZHgsY2IsY2JfYXJncykge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzLFxuXHRcdFx0XHRtID0gdGhpcy5fcGFnZXMuZ2V0KGlkeCk7XG5cblx0XHRcdHNlbGYuX3BkZi5nZXRQYWdlKGlkeCkudGhlbihmdW5jdGlvbihwYWdlKXtcblx0XHRcdFx0dmFyIHZwID0gcGFnZS5nZXRWaWV3cG9ydCgxKSxcblx0XHRcdFx0XHRjYW52YXMgPSAkKCc8Y2FudmFzPjwvY2FudmFzPicpLmdldCgwKSxcblx0XHRcdFx0XHRjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcblxuXHRcdFx0XHR2cCA9IHBhZ2UuZ2V0Vmlld3BvcnQoIG9wdHMub3B0aW9ucy5pbWFnZV93aWR0aCAvIHZwLndpZHRoICk7XG5cblx0XHRcdFx0Y2FudmFzLndpZHRoID0gdnAud2lkdGg7XG5cdFx0XHRcdGNhbnZhcy5oZWlnaHQgPSB2cC5oZWlnaHQ7XG5cblx0XHRcdFx0cGFnZS5yZW5kZXIoe1xuXHRcdFx0XHRcdGNhbnZhc0NvbnRleHQ6IGN0eCxcblx0XHRcdFx0XHR2aWV3cG9ydDogdnAsXG5cdFx0XHRcdH0pLnRoZW4oZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRtLnNldCggJ3BhZ2UnLCBwYWdlICk7XG5cdFx0XHRcdFx0bS5zZXQoICdjYW52YXMnLCBjYW52YXMgKTtcblxuXHRcdFx0XHRcdCEhY2IgJiYgY2IuYXBwbHkobSxjYl9hcmdzfHxbXSk7XG4vL1x0XHRcdFx0XHRzZWxmLnNob3dQYWdlKGlkeCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0fSxcblxuXG5cdFx0dXBsb2FkSW1hZ2VzOmZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzLFxuXHRcdFx0XHR0eXBlID0gJ2ltYWdlL3BuZycsXG5cdFx0XHRcdHVwbG9hZCA9IGZ1bmN0aW9uKG5hbWUpe1xuXHRcdFx0XHRcdC8qXG5cdFx0XHRcdFx0dGhpcy5jYW52YXMudG9CbG9iKGZ1bmN0aW9uKGJsb2Ipe1xuXHRcdFx0XHRcdFx0YmxvYi5uYW1lID0gbmFtZTtcblx0XHRcdFx0XHRcdGJsb2IudHlwZSA9IHR5cGU7XG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhibG9iLm5hbWUpXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhzZWxmLm9wdGlvbnMudXBsb2FkZXIsYmxvYilcblx0XHRcdFx0XHRcdHNlbGYub3B0aW9ucy51cGxvYWRlci5hZGRGaWxlKCBibG9iLCBuYW1lICk7XG5cdFx0XHRcdFx0fSx0eXBlKTtcblx0XHRcdFx0XHQvKi9cblx0XHRcdFx0XHR2YXIgaW1nID0gbmV3IG8uSW1hZ2UoKTtcblx0XHRcdFx0XHRpbWcub25sb2FkID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRpbWcubmFtZSA9IG5hbWU7XG5cdFx0XHRcdFx0XHRpbWcudHlwZSA9IHR5cGU7XG5cdFx0XHRcdFx0XHRzZWxmLm9wdGlvbnMudXBsb2FkZXIuYWRkRmlsZSggaW1nLmdldEFzQmxvYigpLCBuYW1lICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGltZy5sb2FkKCB0aGlzLmdldCgnY2FudmFzJykudG9EYXRhVVJMKHR5cGUpICk7XG5cdFx0XHRcdFx0Ly9cblx0XHRcdFx0XHQkKCdib2R5JykuYXBwZW5kKGltZyk7XG5cdFx0XHRcdH07XG5cblx0XHRcdC8vIGNyZWF0ZSBlIG5ldyBtZWRpYSBtb2RlbCBmcm9tIGJsb2IgZGF0YSBVUkwgdGhpbmd5XG5cdFx0XHR0aGlzLl9wYWdlcy5lYWNoKGZ1bmN0aW9uKCBwZywgaSApe1xuXHRcdFx0XHRpZiAoICEgcGcuZ2V0KCdzZWxlY3RlZCcpICkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXHRcdFx0XHR2YXIgbmFtZSA9IHNlbGYuZmlsZS5maWxlLm5hbWUucmVwbGFjZSgvXFwuW2EtejAtOV0rJC8sJycpICsgJy1wJyArIGkgKyAnLnBuZyc7XG5cdFx0XHRcdGlmICggISBwZy5nZXQoJ2NhbnZhcycpICkge1xuXHRcdFx0XHRcdC8vIG5lZWRzIHJlbmRlcmluZ1xuXHRcdFx0XHRcdHNlbGYucmVuZGVyUGFnZShpKjEsIHVwbG9hZCxbbmFtZV0pO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHVwbG9hZC5hcHBseShwZyxbbmFtZV0pXG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cblx0XHRcdC8vXG5cdFx0fVxuXHR9KTtcblxuXG5cdF8uZXh0ZW5kKCB3cC5tZWRpYS52aWV3LlVwbG9hZGVyV2luZG93LnByb3RvdHlwZSwge1xuXHRcdF9wYXJlbnRSZWFkeTogd3AubWVkaWEudmlldy5VcGxvYWRlcldpbmRvdy5wcm90b3R5cGUucmVhZHksXG5cdFx0ZGlkUmVhZHk6ZmFsc2UsXG5cblx0XHRyZWFkeTpmdW5jdGlvbigpIHtcblx0XHRcdHZhciBwZGZzID0gW10sXG5cdFx0XHRcdHBkZk1vZGFsLCBzZWxmID0gdGhpcztcblxuXHRcdFx0Ly8gcHJldmVudCBkb3VibGUgaW5pdFxuXHRcdFx0aWYgKCB0aGlzLmRpZFJlYWR5ICkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5fcGFyZW50UmVhZHkuYXBwbHkoIHRoaXMgLCBhcmd1bWVudHMgKTtcblx0XHRcdH1cblx0XHRcdHRoaXMuZGlkUmVhZHkgPSB0cnVlO1xuXG5cdFx0XHRyZXQgPSB0aGlzLl9wYXJlbnRSZWFkeS5hcHBseSggdGhpcyAsIGFyZ3VtZW50cyApO1xuXG5cdFx0XHRmdW5jdGlvbiBwZGZQb3B1cCggdXBsb2FkZXIgKSB7XG5cdFx0XHRcdHZhciBmaWxlSXRlbSwgc3JjO1xuXHRcdFx0XHRpZiAoIHBkZk1vZGFsICkge1xuXHRcdFx0XHRcdHBkZk1vZGFsLmNsb3NlKCkuZGlzcG9zZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggISEgcGRmcy5sZW5ndGggKSB7XG5cdFx0XHRcdFx0ZmlsZUl0ZW0gPSBwZGZzLnNoaWZ0KCk7XG5cdFx0XHRcdFx0cGRmTW9kYWwgPSBuZXcgcGRmUmVuZGVyZXIudmlldy5QREZGcmFtZSgge1xuXHRcdFx0XHRcdFx0Y29udHJvbGxlcjogJCh0aGlzKSxcblx0XHRcdFx0XHRcdHVwbG9hZGVyOnVwbG9hZGVyLFxuXHRcdFx0XHRcdFx0dGl0bGU6IGwxMG4uVXBsb2FkICsgJzogJyArIGZpbGVJdGVtLmZpbGUubmFtZS5yZXBsYWNlKC9cXC5bYS16MC05XSskLywnJyksXG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdHBkZk1vZGFsLm9uKCdwcm9jZWVkJyxmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdC8vIG5leHRcblx0XHRcdFx0XHRcdHBkZlBvcHVwKCB1cGxvYWRlciApO1xuXG5cdFx0XHRcdFx0fSkub24oJ2NhbmNlbC11cGxvYWQnLGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0ZmlsZUl0ZW0uZmlsZS5hdHRhY2htZW50LmRlc3Ryb3koKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRwZGZNb2RhbC5zZXRGaWxlKCBmaWxlSXRlbSApO1xuXHRcdFx0XHRcdHBkZk1vZGFsLm9wZW4oKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR1cGxvYWRlci5zdGFydCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGZ1bmN0aW9uIGFkZFBERiggZmlsZURhdGEsIHVwbG9hZGVyICkge1xuXG5cdFx0XHR9XG5cblx0XHRcdC8qKlxuXHRcdFx0ICpcdEByZXR1cm4gbmF0aXZlIGZpbGUgb2JqZWN0IG9yIGJsb2Jcblx0XHRcdCAqL1xuXHRcdFx0ZnVuY3Rpb24gcmVzb2x2ZUZpbGUoIGZpbGUgKSB7XG5cdFx0XHRcdHZhciBfcmV0ID0ge1xuXHRcdFx0XHRcdGZpbGU6IGZpbGUsXG5cdFx0XHRcdFx0YmxvYjpmaWxlLmdldE5hdGl2ZSgpXG5cdFx0XHRcdH0sIF9yZXQyLCBieXRlcywgaTtcblx0XHRcdFx0aWYgKCAhIF9yZXQuYmxvYiApIHtcblx0XHRcdFx0XHRfcmV0LmJsb2IgPSBmaWxlLmdldFNvdXJjZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBfcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBzdG9wIHVwbG9hZGVyIGFuZCBnZW5lcmF0ZSBjcm9wZGF0YVxuXHRcdFx0dGhpcy51cGxvYWRlci51cGxvYWRlci5iaW5kKCdGaWxlc0FkZGVkJyxmdW5jdGlvbiggdXAsIGZpbGVzICkge1xuXHRcdFx0XHR2YXIgZmlsZURhdGE7XG5cdFx0XHRcdC8vIHB1dCBtb2RhbFxuXHRcdFx0XHRmb3IgKHZhciBpPTA7aTxmaWxlcy5sZW5ndGg7aSsrKSB7XG5cdFx0XHRcdFx0aWYgKCBmaWxlc1tpXS50eXBlID09ICdhcHBsaWNhdGlvbi9wZGYnKSB7XG5cdFx0XHRcdFx0XHRmaWxlRGF0YSA9IHJlc29sdmVGaWxlKCBmaWxlc1tpXSApO1xuXHRcdFx0XHRcdFx0aWYgKCBmaWxlRGF0YS5ibG9iIGluc3RhbmNlb2YgQmxvYiApIHtcblx0XHRcdFx0XHRcdFx0cGRmcy5wdXNoKCBmaWxlRGF0YSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIHBkZnMubGVuZ3RoICkge1xuXHRcdFx0XHRcdHVwLnN0b3AoKTtcblx0XHRcdFx0XHR1cC5yZWZyZXNoKCk7XG5cdFx0XHRcdFx0cGRmUG9wdXAoIHVwICk7IC8vIHdpbGwgYXNrIGZvciBmb2N1cyBvciBzdGFydCB1cGxvYWRlclxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHRcdC8vIHNlbmQgY3JvcGRhdGFcblx0XHRcdHRoaXMudXBsb2FkZXIudXBsb2FkZXIuYmluZCgnQmVmb3JlVXBsb2FkJyxmdW5jdGlvbiggdXAsIGZpbGUgKSB7XG5cdFx0XHRcdHZhciBzLCBjcm9wZGF0YSwgZm9jdXNwb2ludDtcblx0XHRcdFx0Ly8gZG8gc29tZXRoaW5nIHdpdGggZmlsZXMgYmVmb3JlIHVwbG9hZC4uLlxuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblx0fSk7XG5cbn0pKCBqUXVlcnksIHBkZl9yZW5kZXJlciwgbU94aWUgKTtcbiJdfQ==
