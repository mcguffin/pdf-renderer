!function(r,e,o){var l={view:{}},d=e.l10n;l.view.PDFFrame=wp.media.view.MediaFrame.extend({template:wp.template("pdf-modal"),regions:["title","content","instructions","buttons","pagenav"],events:{"click [data-page]":"clickPage"},initialize:function(){return _.defaults(this.options,{uploader:!1,title:d.pdfUpload}),wp.media.view.MediaFrame.prototype.initialize.apply(this,arguments),this._pdf=this._canvas=null,this._current_page=0,this._pages={},this.createTitle(),this.createButtons(),this},createTitle:function(){this._title=new wp.media.View({tagName:"h1"}),this._title.$el.text(this.options.title),this.title.set([this._title])},createButtons:function(){var e=this;this.buttons.set([new wp.media.view.Button({text:d.CancelUpload,className:"cancel-upload",click:function(){e.trigger("cancel-upload"),e.close()}}),new wp.media.view.Button({text:d.UploadPDF,className:"upload-pdf",click:function(){}}),new wp.media.view.Button({text:d.UploadImages,className:"button-primary",click:function(){e.trigger("cancel-upload"),e.uploadImages(),e.close()}})])},setFile:function(e){var t=this,a=new FileReader;return this.file=e,a.onload=function(e){t.parsePDF(e.target.result)},a.readAsArrayBuffer(e.blob),this},clickPage:function(e){this.showPage(r(e.target).attr("data-page"))},renderPageNav:function(e){console.log();var t,a=this,i=1,n=[];for(this._pages={};i<=e;i++)this._pages[i]={page:!1,canvas:!1,selected:!0},n.push(new wp.media.view.Button({text:"",className:"button-primary dashicons-yes dashicons",_page:i,click:function(){a.togglePage(this.options._page),this.$el.toggleClass("button-primary").next("button").toggleClass("button-primary")}}).render()),n.push(new wp.media.view.Button({text:i.toString(),className:"button-primary",_page:i,click:function(){a.showPage(this.options._page)}}).render());t=new wp.media.view.ButtonGroup({buttons:n}),this.pagenav.set([t.render()])},parsePDF:function(e){var t=this;pdfjsLib.getDocument(e).then(function(e){t._pdf=e,t.renderPageNav(e.numPages),t.showPage(1)})},togglePage:function(e){this._pages[e].selected=!this._pages[e].selected,_.each(this._pages,function(e,t){console.log(t,e)})},showPage:function(e){var t=this;this._pages[e].canvas?this.content.set([new wp.media.View({el:this._pages[e].canvas})]):this.renderPage(e,function(){t.showPage(e)})},renderPage:function(n,o,s){var p=this;p._pdf.getPage(n).then(function(e){var t=e.getViewport(1),a=r("<canvas></canvas>").get(0),i=a.getContext("2d");t=e.getViewport(1920/t.width),a.width=t.width,a.height=t.height,e.render({canvasContext:i,viewport:t}).then(function(){p._pages[n].page=e,p._pages[n].canvas=a,o&&o.apply(p._pages[n],s||[])})})},uploadImages:function(){var i=this,a="image/png",n=function(e){var t=new o.Image;t.onload=function(){t.name=e,t.type=a,i.options.uploader.addFile(t.getAsBlob(),e)},t.load(this.canvas.toDataURL(a)),r("body").append(t)};_.each(this._pages,function(e,t){var a=i.file.file.name.replace(/\.[a-z0-9]+$/,"")+"-p"+t+".png";e.canvas?n.apply(e):i.renderPage(1*t,n,[a])})}}),_.extend(wp.media.view.UploaderWindow.prototype,{_parentReady:wp.media.view.UploaderWindow.prototype.ready,didReady:!1,ready:function(){var s,p=[];if(this.didReady)return this._parentReady.apply(this,arguments);return this.didReady=!0,ret=this._parentReady.apply(this,arguments),this.uploader.uploader.bind("FilesAdded",function(e,t){for(var a,i,n,o=0;o<t.length;o++)"application/pdf"==t[o].type&&(i=t[o],n=void 0,(n={file:i,blob:i.getNative()}).blob||(n.blob=i.getSource()),(a=n).blob instanceof Blob&&p.push(a));p.length&&(e.stop(),e.refresh(),function e(t){var a;s&&s.close().dispose(),p.length?(a=p.shift(),(s=new l.view.PDFFrame({controller:r(this),uploader:t,title:d.Upload+": "+a.file.name.replace(/\.[a-z0-9]+$/,"")})).on("proceed",function(){e(t)}).on("cancel-upload",function(){a.file.attachment.destroy()}),s.setFile(a),s.open()):t.start()}(e))}),this.uploader.uploader.bind("BeforeUpload",function(e,t){}),ret}})}(jQuery,pdf_renderer,mOxie);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
